// ============= FIXES.JS =============
// –ù–∞–±–æ—Ä –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –¥–ª—è Minions Game
// 
// –†–µ—à–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–æ–±–ª–µ–º—ã:
// 1. –ü—Ä–æ–≥—Ä–µ—Å—Å –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è
// 2. –ë–æ–∫—Å—ã –Ω–µ –∞–∫—Ç–∏–≤–Ω—ã
// 3. –ó–≤–µ–∑–¥—ã –≤ –∑–∞–¥–∞–Ω–∏—è—Ö, —Ö–æ—Ç—è –∏—Ö –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å
// 4. –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ—Ñ–∏–ª—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞
// 5. –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ
// 6. –£–ª—É—á—à–µ–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Telegram

// ========== –£–õ–£–ß–®–ï–ù–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –°–û–•–†–ê–ù–ï–ù–ò–Ø ==========

// –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
function saveGameState() {
    try {
        // –î–æ–±–∞–≤–∏–º –º–µ—Ç–∫—É –≤—Ä–µ–º–µ–Ω–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        gameState.lastSaveTime = Date.now();
        
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º gameState –≤ —Å—Ç—Ä–æ–∫—É
        const gameStateJSON = JSON.stringify(gameState);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
        localStorage.setItem('minionsGameState', gameStateJSON);
        
        console.log("–°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ localStorage:", new Date().toLocaleTimeString());
        
        // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ - –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å
        return true;
    } catch (e) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–≥—Ä–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è:', e);
        
        // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ - –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        // –ù–∞–ø—Ä–∏–º–µ—Ä, —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ–ª—å–∫–æ –∫–ª—é—á–µ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        try {
            const minimalState = {
                bananas: gameState.bananas,
                stars: gameState.stars,
                level: gameState.level,
                totalBananas: gameState.totalBananas
            };
            localStorage.setItem('minionsGameState_backup', JSON.stringify(minimalState));
            console.log("–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã");
        } catch (backupError) {
            console.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é:', backupError);
        }
        
        return false;
    }
}

// –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
function loadGameState() {
    try {
        // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        const savedState = localStorage.getItem('minionsGameState');
        
        if (savedState) {
            try {
                const parsed = JSON.parse(savedState);
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
                if (parsed && typeof parsed === 'object') {
                    // –û–±—ä–µ–¥–∏–Ω—è–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –±–∞–∑–æ–≤—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
                    // –¥–ª—è —Å–ª—É—á–∞—è, –µ—Å–ª–∏ –≤ gameState –ø–æ—è–≤–∏–ª–∏—Å—å –Ω–æ–≤—ã–µ –ø–æ–ª—è
                    gameState = {...gameState, ...parsed};
                    
                    console.log("–°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –∏–∑ localStorage");
                    
                    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –≤—Ö–æ–¥
                    checkDailyLogin();
                    
                    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI
                    updateStats();
                    updateTaskProgress();
                    
                    return true;
                } else {
                    throw new Error("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö");
                }
            } catch (parseError) {
                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:", parseError);
                
                // –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
                return loadBackupState();
            }
        } else {
            console.log("–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –Ω–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—É—é –∏–≥—Ä—É");
            return false;
        }
    } catch (e) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', e);
        return loadBackupState();
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
function loadBackupState() {
    try {
        const backupState = localStorage.getItem('minionsGameState_backup');
        if (backupState) {
            const parsed = JSON.parse(backupState);
            if (parsed && typeof parsed === 'object') {
                gameState = {...gameState, ...parsed};
                console.log("–ó–∞–≥—Ä—É–∂–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏");
                return true;
            }
        }
    } catch (e) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏:', e);
    }
    return false;
}

// –î–æ–±–∞–≤–ª—è–µ–º –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥
let autoSaveInterval;
function startAutoSave() {
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª, –µ—Å–ª–∏ –±—ã–ª
    if (autoSaveInterval) {
        clearInterval(autoSaveInterval);
    }
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª
    autoSaveInterval = setInterval(() => {
        saveGameState();
    }, 60000); // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
    
    console.log("–ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ");
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
function initSaveSystem() {
    loadGameState();
    startAutoSave();
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏ —É—Ö–æ–¥–µ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    window.addEventListener('beforeunload', saveGameState);
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö)
    if (window.Telegram && window.Telegram.WebApp) {
        window.Telegram.WebApp.onEvent('viewportChanged', () => {
            if (window.Telegram.WebApp.isExpanded === false) {
                saveGameState();
            }
        });
    }
}

// ========== –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–ò–°–¢–ï–ú–´ –ë–û–ö–°–û–í ==========

// –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –±–æ–∫—Å–∞
function openBox(type) {
    console.log("–ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –±–æ–∫—Å–∞:", type);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–∏–ø–∞ –±–æ–∫—Å–∞
    if (!type) {
        console.error("–ù–µ —É–∫–∞–∑–∞–Ω —Ç–∏–ø –±–æ–∫—Å–∞");
        showPopup('–û—à–∏–±–∫–∞: –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –±–æ–∫—Å–∞');
        return false;
    }
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
    let cost = 0;
    switch(type) {
        case 'simple': cost = 10; break;
        case 'standard': cost = 25; break;
        case 'premium': cost = 50; break;
        case 'mega': cost = 100; break;
        case 'special': cost = 75; break;
        default:
            console.error("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –±–æ–∫—Å–∞:", type);
            showPopup('–û—à–∏–±–∫–∞: –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –±–æ–∫—Å–∞');
            return false;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ö–≤–∞—Ç–∞–µ—Ç –ª–∏ –±–∞–Ω–∞–Ω–æ–≤
    if (gameState.bananas < cost) {
        console.log("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–Ω–∞–Ω–æ–≤ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –±–æ–∫—Å–∞");
        showPopup(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–Ω–∞–Ω–æ–≤! –ù—É–∂–Ω–æ ${cost} üçå`);
        playSound('minionShocked');
        return false;
    }
    
    // –°–ø–∏—Å—ã–≤–∞–µ–º –±–∞–Ω–∞–Ω—ã
    gameState.bananas -= cost;
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–≥—Ä–∞–¥—É
    let reward;
    switch(type) {
        case 'simple':
            // 70% —à–∞–Ω—Å –Ω–∞ –±–∞–Ω–∞–Ω—ã (5-15), 30% —à–∞–Ω—Å –Ω–∞ –æ–ø—ã—Ç (5-10)
            if (Math.random() < 0.7) {
                const bananas = Math.floor(Math.random() * 11) + 5;
                gameState.bananas += bananas;
                gameState.totalBananas += bananas;
                reward = { type: 'bananas', amount: bananas, text: `+${bananas} –±–∞–Ω–∞–Ω–æ–≤` };
            } else {
                const exp = Math.floor(Math.random() * 6) + 5;
                addExperience(exp);
                reward = { type: 'exp', amount: exp, text: `+${exp} –æ–ø—ã—Ç–∞` };
            }
            break;
            
        case 'standard':
            // 60% —à–∞–Ω—Å –Ω–∞ –±–∞–Ω–∞–Ω—ã (15-30), 40% —à–∞–Ω—Å –Ω–∞ –æ–ø—ã—Ç (10-20)
            if (Math.random() < 0.6) {
                const bananas = Math.floor(Math.random() * 16) + 15;
                gameState.bananas += bananas;
                gameState.totalBananas += bananas;
                reward = { type: 'bananas', amount: bananas, text: `+${bananas} –±–∞–Ω–∞–Ω–æ–≤` };
            } else {
                const exp = Math.floor(Math.random() * 11) + 10;
                addExperience(exp);
                reward = { type: 'exp', amount: exp, text: `+${exp} –æ–ø—ã—Ç–∞` };
            }
            break;
            
        case 'premium':
            // –ü—Ä–µ–º–∏—É–º –Ω–∞–≥—Ä–∞–¥—ã
            const premiumReward = Math.random();
            if (premiumReward < 0.5) {
                // 50% —à–∞–Ω—Å –Ω–∞ –±–∞–Ω–∞–Ω—ã (40-80)
                const bananas = Math.floor(Math.random() * 41) + 40;
                gameState.bananas += bananas;
                gameState.totalBananas += bananas;
                reward = { type: 'bananas', amount: bananas, text: `+${bananas} –±–∞–Ω–∞–Ω–æ–≤` };
            } else if (premiumReward < 0.85) {
                // 35% —à–∞–Ω—Å –Ω–∞ –æ–ø—ã—Ç (20-40)
                const exp = Math.floor(Math.random() * 21) + 20;
                addExperience(exp);
                reward = { type: 'exp', amount: exp, text: `+${exp} –æ–ø—ã—Ç–∞` };
            } else {
                // 15% —à–∞–Ω—Å –Ω–∞ –∑–≤–µ–∑–¥—É
                gameState.stars += 1;
                gameState.totalStars += 1;
                reward = { type: 'stars', amount: 1, text: `+1 –∑–≤–µ–∑–¥–∞` };
            }
            
            // –û—Ç–º–µ—á–∞–µ–º –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–µ–º–∏—É–º-–∫–µ–π—Å–∞
            if (gameState.taskProgress.task2 < 1) {
                gameState.taskProgress.task2 = 1;
                setTimeout(() => {
                    completeTask(2);
                }, 1000);
            }
            break;
            
        case 'mega':
            // –ú–µ–≥–∞ –Ω–∞–≥—Ä–∞–¥—ã
            const megaReward = Math.random();
            if (megaReward < 0.4) {
                // 40% —à–∞–Ω—Å –Ω–∞ –±–∞–Ω–∞–Ω—ã (80-150)
                const bananas = Math.floor(Math.random() * 71) + 80;
                gameState.bananas += bananas;
                gameState.totalBananas += bananas;
                reward = { type: 'bananas', amount: bananas, text: `+${bananas} –±–∞–Ω–∞–Ω–æ–≤` };
            } else if (megaReward < 0.7) {
                // 30% —à–∞–Ω—Å –Ω–∞ –æ–ø—ã—Ç (40-80)
                const exp = Math.floor(Math.random() * 41) + 40;
                addExperience(exp);
                reward = { type: 'exp', amount: exp, text: `+${exp} –æ–ø—ã—Ç–∞` };
            } else if (megaReward < 0.9) {
                // 20% —à–∞–Ω—Å –Ω–∞ –∑–≤–µ–∑–¥—ã (2-3)
                const stars = Math.floor(Math.random() * 2) + 2;
                gameState.stars += stars;
                gameState.totalStars += stars;
                reward = { type: 'stars', amount: stars, text: `+${stars} –∑–≤–µ–∑–¥—ã` };
            } else {
                // 10% —à–∞–Ω—Å –Ω–∞ –¥–∂–µ–∫–ø–æ—Ç - –≤—Å–µ –≤–∏–¥—ã –Ω–∞–≥—Ä–∞–¥
                const bananas = 100;
                const exp = 50;
                const stars = 1;
                gameState.bananas += bananas;
                gameState.totalBananas += bananas;
                gameState.stars += stars;
                gameState.totalStars += stars;
                addExperience(exp);
                reward = { type: 'jackpot', text: `–î–ñ–ï–ö–ü–û–¢! +${bananas} –±–∞–Ω–∞–Ω–æ–≤, +${exp} –æ–ø—ã—Ç–∞, +${stars} –∑–≤–µ–∑–¥–∞` };
            }
            break;
            
        case 'special':
            // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã
            const specialReward = Math.random();
            if (specialReward < 0.3) {
                // 30% —à–∞–Ω—Å –Ω–∞ –±–∞–Ω–∞–Ω—ã (60-120)
                const bananas = Math.floor(Math.random() * 61) + 60;
                gameState.bananas += bananas;
                gameState.totalBananas += bananas;
                reward = { type: 'bananas', amount: bananas, text: `+${bananas} –±–∞–Ω–∞–Ω–æ–≤` };
            } else if (specialReward < 0.6) {
                // 30% —à–∞–Ω—Å –Ω–∞ –æ–ø—ã—Ç (30-60)
                const exp = Math.floor(Math.random() * 31) + 30;
                addExperience(exp);
                reward = { type: 'exp', amount: exp, text: `+${exp} –æ–ø—ã—Ç–∞` };
            } else if (specialReward < 0.9) {
                // 30% —à–∞–Ω—Å –Ω–∞ –∑–≤–µ–∑–¥—ã (1-2)
                const stars = Math.floor(Math.random() * 2) + 1;
                gameState.stars += stars;
                gameState.totalStars += stars;
                reward = { type: 'stars', amount: stars, text: `+${stars} ${stars === 1 ? '–∑–≤–µ–∑–¥–∞' : '–∑–≤–µ–∑–¥—ã'}` };
            } else {
                // 10% —à–∞–Ω—Å –Ω–∞ –±–æ–Ω—É—Å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ñ–µ—Ä–º—ã
                if (!gameState.farm) gameState.farm = { efficiency: 1.0 };
                gameState.farm.efficiency += 0.2;
                reward = { type: 'boost', text: `+20% –∫ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ñ–µ—Ä–º—ã!` };
            }
            break;
    }
    
    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –±–æ–∫—Å–æ–≤
    gameState.openedBoxes = (gameState.openedBoxes || 0) + 1;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∏–µ –±–æ–∫—Å–æ–≤
    if (gameState.openedBoxes >= 5 && gameState.taskProgress.task5 < 1) {
        gameState.taskProgress.task5 = 1;
        setTimeout(() => {
            completeTask(5);
        }, 2000);
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    updateStats();
    saveGameState();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    showBoxAnimation(type, reward);
    
    // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∑–≤—É–∫
    playSound('box');
    vibrate([100, 50, 100]);
    
    return true;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è –±–æ–∫—Å–∞
function showBoxAnimation(type, reward) {
    // –ù–∞—Ö–æ–¥–∏–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
    let container = document.getElementById('box-animation-container');
    
    // –ï—Å–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
    if (!container) {
        container = document.createElement('div');
        container.id = 'box-animation-container';
        container.className = 'modal-container';
        
        const closeBtn = document.createElement('div');
        closeBtn.className = 'close-btn';
        closeBtn.textContent = '‚úñ';
        closeBtn.onclick = function() { closeModal('box-animation-container'); };
        
        const content = document.createElement('div');
        content.className = 'box-animation-content';
        
        const boxImage = document.createElement('img');
        boxImage.id = 'box-image';
        boxImage.onerror = function() { this.src = 'https://i.imgur.com/ZcukEsb.png'; };
        
        const boxReward = document.createElement('div');
        boxReward.id = 'box-reward';
        boxReward.className = 'box-reward';
        
        content.appendChild(boxImage);
        content.appendChild(boxReward);
        
        container.appendChild(closeBtn);
        container.appendChild(content);
        
        document.body.appendChild(container);
    }
    
    // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∞–Ω–∏–º–∞—Ü–∏–∏
    const boxImage = document.getElementById('box-image');
    const boxReward = document.getElementById('box-reward');
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–æ–∫—Å–∞
    boxImage.src = `images/box_${type}.png`;
    boxImage.onerror = function() { this.src = 'https://i.imgur.com/ZcukEsb.png'; };
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–ª–∞—Å—Å—ã –∏ —Å—Ç–∏–ª–∏ –¥–ª—è –Ω–æ–≤–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏
    boxImage.className = '';
    boxReward.style.opacity = '0';
    boxReward.textContent = '';
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    container.style.display = 'flex';
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –≤—Å—Ç—Ä—è—Ö–∏–≤–∞–Ω–∏—è
    setTimeout(() => {
        boxImage.classList.add('shake');
        
        // –ü–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –≤—Å—Ç—Ä—è—Ö–∏–≤–∞–Ω–∏—è –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –æ—Ç–∫—Ä—ã—Ç–∏—è
        setTimeout(() => {
            boxImage.classList.remove('shake');
            boxImage.classList.add('open');
            
            // –ü–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–≥—Ä–∞–¥—É
            setTimeout(() => {
                boxReward.textContent = reward.text;
                boxReward.style.opacity = '1';
                
                // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–µ—Ç—Ç–∏ –¥–ª—è –æ—Å–æ–±—ã—Ö –Ω–∞–≥—Ä–∞–¥
                if (reward.type === 'stars' || reward.type === 'jackpot' || reward.type === 'boost') {
                    createConfetti();
                }
            }, 500);
        }, 1000);
    }, 500);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –±–æ–∫—Å–æ–≤
function initBoxHandlers() {
    console.log("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –±–æ–∫—Å–æ–≤");
    
    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è –±–æ–∫—Å–æ–≤
    const boxButtons = document.querySelectorAll('.open-box-btn');
    
    boxButtons.forEach(button => {
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        const newButton = button.cloneNode(true);
        if (button.parentNode) {
            button.parentNode.replaceChild(newButton, button);
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        newButton.addEventListener('click', function(event) {
            // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ —Å–æ–±—ã—Ç–∏—è
            event.preventDefault();
            event.stopPropagation();
            
            // –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø –±–æ–∫—Å–∞
            const boxType = this.getAttribute('data-type');
            console.log("–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ—Ç–∫—Ä—ã—Ç–∏—è –±–æ–∫—Å–∞:", boxType);
            
            // –û—Ç–∫—Ä—ã–≤–∞–µ–º –±–æ–∫—Å
            openBox(boxType);
        });
    });
    
    // –¢–∞–∫–∂–µ –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫ —Å–∞–º–∏–º –±–æ–∫—Å–∞–º –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
    const boxes = document.querySelectorAll('.box');
    
    boxes.forEach(box => {
        // –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø –±–æ–∫—Å–∞
        const boxType = box.getAttribute('data-type');
        if (!boxType) return;
        
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        const newBox = box.cloneNode(true);
        if (box.parentNode) {
            box.parentNode.replaceChild(newBox, box);
        }
        
        // –ù–∞—Ö–æ–¥–∏–º –∫–Ω–æ–ø–∫—É –≤ —ç—Ç–æ–º –±–æ–∫—Å–µ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        const button = newBox.querySelector('.open-box-btn');
        if (button) {
            button.addEventListener('click', function(event) {
                event.preventDefault();
                event.stopPropagation();
                openBox(boxType);
            });
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ –≤–µ—Å—å –±–æ–∫—Å –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
        newBox.addEventListener('click', function(event) {
            // –ï—Å–ª–∏ –∫–ª–∏–∫ –±—ã–ª –Ω–µ –ø–æ –∫–Ω–æ–ø–∫–µ, –∞ –ø–æ —Å–∞–º–æ–º—É –±–æ–∫—Å—É
            if (event.target !== button) {
                openBox(boxType);
            }
        });
    });
    
    console.log("–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –±–æ–∫—Å–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã");
}

// ========== –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–ò–°–¢–ï–ú–´ –ó–ê–î–ê–ù–ò–ô ==========

// –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–¥–∞–Ω–∏–π (–≤—Å–µ –Ω–∞–≥—Ä–∞–¥—ã –≤ –±–∞–Ω–∞–Ω–∞—Ö)
const tasksData = [
    { id: 1, title: "–ü—Ä–∏–≥–ª–∞—Å–∏ 10 –¥—Ä—É–∑–µ–π", reward: "+100 üçå", maxProgress: 10 },
    { id: 2, title: "–û—Ç–∫—Ä–æ–π –ø—Ä–µ–º–∏—É–º-–∫–µ–π—Å", reward: "+50 üçå", maxProgress: 1 },
    { id: 3, title: "–ù–∞–∫–æ—Ä–º–∏ 5 –º–∏–Ω—å–æ–Ω–æ–≤", reward: "+20 üçå", maxProgress: 5 },
    { id: 4, title: "–°–æ–±–µ—Ä–∏ 30 –±–∞–Ω–∞–Ω–æ–≤", reward: "+25 üçå", maxProgress: 30 },
    { id: 5, title: "–û—Ç–∫—Ä–æ–π 5 –±–æ–∫—Å–æ–≤", reward: "+40 üçå", maxProgress: 5 },
    { id: 6, title: "–î–æ—Å—Ç–∏–≥–Ω–∏ 3 —É—Ä–æ–≤–Ω—è", reward: "+60 üçå", maxProgress: 3 },
    { id: 7, title: "–ü–æ–ª—É—á–∏ 5 –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π", reward: "+75 üçå", maxProgress: 5 },
    { id: 8, title: "–°–µ—Ä–∏—è –≤—Ö–æ–¥–æ–≤ 5 –¥–Ω–µ–π", reward: "+35 üçå", maxProgress: 5 },
    { id: 9, title: "–°–æ–±–µ—Ä–∏ 100 –±–∞–Ω–∞–Ω–æ–≤", reward: "+50 üçå", maxProgress: 100 },
    { id: 10, title: "–ù–∞–∫–æ–ø–∏ 20 –±–∞–Ω–∞–Ω–æ–≤ –≤ —á–∞—Å", reward: "+100 üçå", maxProgress: 20 }
];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–∞–¥–∞–Ω–∏–π
function initTasks() {
    console.log("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∑–∞–¥–∞–Ω–∏–π");
    
    // –ù–∞—Ö–æ–¥–∏–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∑–∞–¥–∞–Ω–∏–π
    const tasksContainer = document.querySelector('.tasks-container');
    if (!tasksContainer) {
        console.error("–ù–µ –Ω–∞–π–¥–µ–Ω –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∑–∞–¥–∞–Ω–∏–π");
        return;
    }
    
    // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    tasksContainer.innerHTML = '';
    
    // –°–æ–∑–¥–∞–µ–º HTML –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è
    tasksData.forEach(task => {
        const taskDiv = document.createElement('div');
        taskDiv.className = 'task';
        taskDiv.setAttribute('data-task-id', task.id);
        
        taskDiv.innerHTML = `
            <div class="task-header">
                <div class="task-title">${task.title}</div>
                <div class="task-reward">${task.reward}</div>
            </div>
            <div class="progress-bar">
                <div id="task${task.id}-progress" class="progress" style="width: 0%;"></div>
            </div>
            <div class="task-counter" id="task${task.id}-counter">0/${task.maxProgress}</div>
        `;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
        taskDiv.addEventListener('click', function() {
            // –î–ª—è –∑–∞–¥–∞–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∞–∫—Ç–∏–≤–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥—Ä—É–∑–µ–π)
            if (task.id === 1) {
                inviteFriend();
            }
        });
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞–Ω–∏–µ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        tasksContainer.appendChild(taskDiv);
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–¥–∞–Ω–∏–π
    updateTaskProgress();
    
    console.log("–ó–∞–¥–∞–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã");
}

// –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è
function completeTask(taskId) {
    console.log("–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è:", taskId);
    
    // –ù–∞—Ö–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è
    const taskData = tasksData.find(task => task.id === taskId);
    if (!taskData) {
        console.error("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ:", taskId);
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –ª–∏ —É–∂–µ –∑–∞–¥–∞–Ω–∏–µ
    if (gameState.taskProgress[`task${taskId}`] >= 1) {
        console.log("–ó–∞–¥–∞–Ω–∏–µ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ");
        return;
    }
    
    // –û—Ç–º–µ—á–∞–µ–º –∑–∞–¥–∞–Ω–∏–µ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ
    gameState.taskProgress[`task${taskId}`] = 1;
    gameState.completedTasks = (gameState.completedTasks || 0) + 1;
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–≥—Ä–∞–¥—É (–≤—Å–µ–≥–¥–∞ –±–∞–Ω–∞–Ω—ã, –∏–∑–≤–ª–µ–∫–∞–µ–º —á–∏—Å–ª–æ –∏–∑ —Å—Ç—Ä–æ–∫–∏ –Ω–∞–≥—Ä–∞–¥—ã)
    let reward = 0;
    const rewardMatch = taskData.reward.match(/\+(\d+)/);
    if (rewardMatch && rewardMatch[1]) {
        reward = parseInt(rewardMatch[1]);
    }
    
    // –í—ã–¥–∞–µ–º –Ω–∞–≥—Ä–∞–¥—É
    gameState.bananas += reward;
    gameState.totalBananas += reward;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    updateStats();
    updateTaskProgress();
    saveGameState();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showPopup(`–ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ! ${taskData.reward}`);
    
    // –ó–≤—É–∫ –∏ –≤–∏–±—Ä–∞—Ü–∏—è
    playSound('task');
    vibrate([100, 30, 100, 30, 100]);
    
    // –°–æ–∑–¥–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç –∫–æ–Ω—Ñ–µ—Ç—Ç–∏
    createConfetti();
    
    return true;
}

// –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∑–∞–¥–∞–Ω–∏–π
function updateTaskProgress() {
    try {
        // –ó–∞–¥–∞–Ω–∏–µ 1: –ü—Ä–∏–≥–ª–∞—Å–∏ 10 –¥—Ä—É–∑–µ–π
        updateTaskProgressUI(1, Math.min(gameState.invitedFriends || 0, 10), 10);
        
        // –ó–∞–¥–∞–Ω–∏–µ 2: –û—Ç–∫—Ä–æ–π –ø—Ä–µ–º–∏—É–º-–∫–µ–π—Å
        updateTaskProgressUI(2, gameState.taskProgress.task2 || 0, 1);
        
        // –ó–∞–¥–∞–Ω–∏–µ 3: –ù–∞–∫–æ—Ä–º–∏ 5 –º–∏–Ω—å–æ–Ω–æ–≤
        const feedCount = Math.min(Math.floor((gameState.petCount || 0) / 5), 5);
        updateTaskProgressUI(3, feedCount, 5);
        
        // –ó–∞–¥–∞–Ω–∏–µ 4: –°–æ–±–µ—Ä–∏ 30 –±–∞–Ω–∞–Ω–æ–≤
        updateTaskProgressUI(4, Math.min(gameState.totalBananas || 0, 30), 30);
        
        // –ó–∞–¥–∞–Ω–∏–µ 5: –û—Ç–∫—Ä–æ–π 5 –±–æ–∫—Å–æ–≤
        updateTaskProgressUI(5, Math.min(gameState.openedBoxes || 0, 5), 5);
        
        // –ó–∞–¥–∞–Ω–∏–µ 6: –î–æ—Å—Ç–∏–≥–Ω–∏ 3 —É—Ä–æ–≤–Ω—è
        updateTaskProgressUI(6, Math.min(gameState.level || 1, 3), 3);
        
        // –ó–∞–¥–∞–Ω–∏–µ 7: –ü–æ–ª—É—á–∏ 5 –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
        updateTaskProgressUI(7, Math.min(gameState.achievements?.length || 1, 5), 5);
        
        // –ó–∞–¥–∞–Ω–∏–µ 8: –°–µ—Ä–∏—è –≤—Ö–æ–¥–æ–≤ 5 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥
        updateTaskProgressUI(8, Math.min(gameState.streak || 0, 5), 5);
        
        // –ó–∞–¥–∞–Ω–∏–µ 9: –°–æ–±–µ—Ä–∏ 100 –±–∞–Ω–∞–Ω–æ–≤
        updateTaskProgressUI(9, Math.min(gameState.totalBananas || 0, 100), 100);
        
        // –ó–∞–¥–∞–Ω–∏–µ 10: –ù–∞–∫–æ–ø–∏ 20 –±–∞–Ω–∞–Ω–æ–≤ –≤ —á–∞—Å
        const farmRate = calculateFarmRate();
        updateTaskProgressUI(10, Math.min(farmRate, 20), 20);
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∑–∞–¥–∞–Ω–∏–π:", error);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Ñ–µ—Ä–º—ã
function calculateFarmRate() {
    if (!gameState.farm) return 0;
    
    const minions = gameState.farm.minions || 0;
    const efficiency = gameState.farm.efficiency || 1.0;
    
    // –ë–∞–∑–æ–≤–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ: 1 –±–∞–Ω–∞–Ω –≤ —á–∞—Å –Ω–∞ –º–∏–Ω—å–æ–Ω–∞
    return Math.floor(minions * efficiency);
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∑–∞–¥–∞–Ω–∏—è
function updateTaskProgressUI(taskId, current, total) {
    try {
        const progressBar = document.getElementById(`task${taskId}-progress`);
        const counter = document.getElementById(`task${taskId}-counter`);
        
        if (progressBar) {
            const percentage = (current / total) * 100;
            progressBar.style.width = `${percentage}%`;
        }
        
        if (counter) {
            counter.textContent = `${current}/${total}`;
        }
        
        // –í—ã–¥–µ–ª—è–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è
        const taskElement = document.querySelector(`.task[data-task-id="${taskId}"]`);
        if (taskElement) {
            if (current >= total) {
                taskElement.classList.add('completed-task');
                
                // –ï—Å–ª–∏ –∑–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ, –Ω–æ –Ω–µ –æ—Ç–º–µ—á–µ–Ω–æ –∫–∞–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–µ, –∑–∞–≤–µ—Ä—à–∞–µ–º –µ–≥–æ
                if (gameState.taskProgress[`task${taskId}`] < 1) {
                    setTimeout(() => {
                        completeTask(taskId);
                    }, 1000);
                }
            } else {
                taskElement.classList.remove('completed-task');
            }
        }
    } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ UI –∑–∞–¥–∞–Ω–∏—è ${taskId}:`, error);
    }
}

// ========== –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –†–ê–ë–û–¢–´ –ü–†–û–§–ò–õ–Ø ==========

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –ø—Ä–æ—Ñ–∏–ª—è
function initProfile() {
    console.log("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram
    let userName = "–ò–≥—Ä–æ–∫";
    let userAvatar = null;
    
    if (window.Telegram && window.Telegram.WebApp) {
        try {
            // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram
            if (window.Telegram.WebApp.initDataUnsafe && window.Telegram.WebApp.initDataUnsafe.user) {
                const user = window.Telegram.WebApp.initDataUnsafe.user;
                userName = user.first_name || "–ò–≥—Ä–æ–∫";
                
                // –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –ø–æ–ª—É—á–∏—Ç—å –∞–≤–∞—Ç–∞—Ä, –Ω–æ Telegram WebApp –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–∞–∫—É—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å
                // –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Å–µ–≤–¥–æ—Å–ª—É—á–∞–π–Ω—ã–π –∞–≤–∞—Ç–∞—Ä –Ω–∞ –æ—Å–Ω–æ–≤–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if (user.id) {
                    userAvatar = `https://i.pravatar.cc/300?img=${user.id % 70}`;
                }
            }
        } catch (e) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram:", e);
        }
    } else if (window.TagManager && window.TagManager.getUserData) {
        try {
            // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ TagManager
            const userData = window.TagManager.getUserData();
            if (userData) {
                userName = userData.first_name || userData.username || "–ò–≥—Ä–æ–∫";
                
                // –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ID –¥–ª—è –∞–≤–∞—Ç–∞—Ä–∞
                if (userData.id) {
                    userAvatar = `https://i.pravatar.cc/300?img=${userData.id % 70}`;
                }
            }
        } catch (e) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ TagManager:", e);
        }
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø—Ä–æ—Ñ–∏–ª–µ
    const userNameElement = document.getElementById('user-name');
    if (userNameElement) {
        userNameElement.textContent = userName;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const profileAvatar = document.querySelector('.profile-avatar');
    if (profileAvatar && userAvatar) {
        profileAvatar.style.backgroundImage = `url('${userAvatar}')`;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ –ø—Ä–æ—Ñ–∏–ª–µ
    updateProfileStats();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è –Ω–∞ –≥–ª–∞–≤–Ω–æ–º —ç–∫—Ä–∞–Ω–µ
    const profileLink = document.querySelector('.profile-link');
    if (profileLink) {
        profileLink.addEventListener('click', function() {
            console.log("–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –ø—Ä–æ—Ñ–∏–ª—è");
                                showSection('main-screen');
                }, 500);
            }
        }, 1000);
        
        return true;
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–≥—Ä—ã:", error);
        
        // –î–∞–∂–µ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏
        if (splashScreen) {
            splashScreen.style.opacity = '0';
            setTimeout(() => {
                splashScreen.style.display = 'none';
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
                showSection('main-screen');
            }, 500);
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        showErrorMessage("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.");
        
        return false;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏
function showLoadingProgress(percentage) {
    const progressBar = document.getElementById('loading-progress-bar');
    const progressText = document.getElementById('loading-progress');
    
    if (progressBar) {
        progressBar.style.width = `${percentage}%`;
    }
    
    if (progressText) {
        progressText.textContent = `${percentage}%`;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ
function showErrorMessage(message) {
    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
    const errorContainer = document.createElement('div');
    errorContainer.style.position = 'fixed';
    errorContainer.style.top = '20px';
    errorContainer.style.left = '50%';
    errorContainer.style.transform = 'translateX(-50%)';
    errorContainer.style.backgroundColor = '#FF6B6B';
    errorContainer.style.color = 'white';
    errorContainer.style.padding = '10px 20px';
    errorContainer.style.borderRadius = '5px';
    errorContainer.style.boxShadow = '0 3px 10px rgba(0, 0, 0, 0.2)';
    errorContainer.style.zIndex = '9999';
    errorContainer.style.maxWidth = '90%';
    errorContainer.style.textAlign = 'center';
    errorContainer.textContent = message;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    document.body.appendChild(errorContainer);
    
    // –£–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è
    setTimeout(() => {
        errorContainer.style.opacity = '0';
        errorContainer.style.transition = 'opacity 0.5s ease';
        
        setTimeout(() => {
            if (errorContainer.parentNode) {
                errorContainer.parentNode.removeChild(errorContainer);
            }
        }, 500);
    }, 5000);
}

// –§–∏–Ω–∞–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
function finalizeInitialization() {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –≤—Ö–æ–¥–∞
    if (typeof checkDailyLogin === 'function') {
        checkDailyLogin();
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    if (typeof updateStats === 'function') {
        updateStats();
    }
    
    // –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    startAutoSave();
    
    // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ—Ö —Ä–∞–∑–¥–µ–ª–æ–≤
    fixAllSections();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    startPeriodicUpdates();
}

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ—Ö —Ä–∞–∑–¥–µ–ª–æ–≤
function fixAllSections() {
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–µ–∫—Ü–∏–π
    document.querySelectorAll('.section, [id$="-section"]').forEach(section => {
        section.style.display = 'none';
    });
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—É—é —Å–µ–∫—Ü–∏—é
    const activeSection = document.querySelector('.section.active, [id$="-section"].active') || 
                          document.getElementById('main-screen');
    
    if (activeSection) {
        activeSection.style.display = 'block';
    } else {
        // –ï—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ–∫—Ü–∏–∏, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é
        const mainScreen = document.getElementById('main-screen');
        if (mainScreen) {
            mainScreen.style.display = 'block';
        }
    }
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –ø—É–Ω–∫—Ç—ã –º–µ–Ω—é
    document.querySelectorAll('.menu-item').forEach(item => {
        item.classList.remove('active');
        
        // –ï—Å–ª–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∞—è —Å–µ–∫—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–∞, –¥–µ–ª–∞–µ–º –ø—É–Ω–∫—Ç –∞–∫—Ç–∏–≤–Ω—ã–º
        const sectionId = item.getAttribute('data-section');
        if (sectionId && (activeSection && activeSection.id === sectionId)) {
            item.classList.add('active');
        }
    });
}

// –ó–∞–ø—É—Å–∫ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
function startPeriodicUpdates() {
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
    setInterval(() => {
        if (typeof updateStats === 'function') {
            updateStats();
        }
    }, 1000);
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–π –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
    setInterval(() => {
        updateTaskProgress();
    }, 5000);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
    setInterval(() => {
        saveGameState();
    }, 60000);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Ñ–µ—Ä–º—ã –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
    if (typeof updateFarm === 'function') {
        setInterval(() => {
            updateFarm();
        }, 10000);
    }
}

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–∫–∞–∑–∞ —Å–µ–∫—Ü–∏–π
function showSection(sectionId) {
    console.log("–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Å–µ–∫—Ü–∏—é:", sectionId);
    
    try {
        // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º ID —Å–µ–∫—Ü–∏–∏
        if (sectionId !== 'main-screen' && !sectionId.endsWith('-section')) {
            sectionId = sectionId + '-section';
        }
        
        // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å–µ–∫—Ü–∏–∏
        const targetSection = document.getElementById(sectionId);
        if (!targetSection) {
            console.warn(`–°–µ–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: ${sectionId}`);
            return;
        }
        
        // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Å–µ–∫—Ü–∏–∏
        document.querySelectorAll('.section, [id$="-section"]').forEach(section => {
            section.style.display = 'none';
            section.classList.remove('active-section');
        });
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ü–µ–ª–µ–≤—É—é —Å–µ–∫—Ü–∏—é
        targetSection.style.display = 'block';
        targetSection.classList.add('active-section');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –ø—É–Ω–∫—Ç—ã –º–µ–Ω—é
        document.querySelectorAll('.menu-item').forEach(item => {
            item.classList.remove('active');
            const itemSection = item.getAttribute('data-section');
            if (itemSection === sectionId || itemSection + '-section' === sectionId) {
                item.classList.add('active');
            }
        });
        
        // –í—ã–ø–æ–ª–Ω—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–µ–∫—Ü–∏–∏
        if (sectionId === 'profile-section') {
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ—Ñ–∏–ª—è
            updateProfileStats();
        } else if (sectionId === 'tasks-section') {
            // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–¥–∞–Ω–∏–π
            updateTaskProgress();
        } else if (sectionId === 'leaderboard-tab-content') {
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤
            if (typeof fetchLeaderboardData === 'function') {
                fetchLeaderboardData();
            }
        }
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ —Å–µ–∫—Ü–∏–∏:", error);
        
        // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
        const mainScreen = document.getElementById('main-screen');
        if (mainScreen) {
            document.querySelectorAll('.section, [id$="-section"]').forEach(section => {
                section.style.display = 'none';
            });
            mainScreen.style.display = 'block';
        }
    }
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
function closeModal(containerId) {
    const container = document.getElementById(containerId);
    if (container) {
        container.style.opacity = '0';
        setTimeout(() => {
            container.style.display = 'none';
            container.style.opacity = '1';
        }, 300);
    }
}

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ü–û–õ–£–ß–ò–¢–¨ –†–ï–ô–¢–ò–ù–ì"
function hideMainButton() {
    if (window.Telegram && window.Telegram.WebApp && window.Telegram.WebApp.MainButton) {
        // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è
        if (window.Telegram.WebApp.MainButton.isVisible) {
            window.Telegram.WebApp.MainButton.hide();
        }
        
        // –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É
        window.Telegram.WebApp.MainButton.onClick(function() {});
        
        console.log("MainButton —Å–∫—Ä—ã—Ç–∞");
    }
}

// –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∞ requestLeaderboardData –≤ TagManager
if (window.TagManager && window.TagManager.leaderboard) {
    const originalRequestLeaderboardData = window.TagManager.leaderboard.requestLeaderboardData;
    
    // –ó–∞–º–µ–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –Ω–æ–≤–æ–π, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É
    window.TagManager.leaderboard.requestLeaderboardData = function() {
        console.log("–ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö —Ä–µ–π—Ç–∏–Ω–≥–∞ –±–µ–∑ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è MainButton");
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Telegram WebApp
        if (window.TagManager.tgApp && window.TagManager.isReady) {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ä–µ–π—Ç–∏–Ω–≥–∞
            window.TagManager.sendDataToBot({
                action: "get_leaderboard",
                userId: window.TagManager.userData?.id || null
            });
            
            // –í–º–µ—Å—Ç–æ –ø–æ–∫–∞–∑–∞ –∫–Ω–æ–ø–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            setTimeout(() => {
                this.handleLeaderboardData(this.generateTestData());
            }, 1000);
            
            return true;
        } else {
            console.warn("TagManager –∏–ª–∏ Telegram WebApp –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã");
            // –í —Å–ª—É—á–∞–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Telegram WebApp –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
            setTimeout(() => {
                this.handleLeaderboardData(this.generateTestData());
            }, 1000);
            
            return false;
        }
    };
}

// –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', function() {
    // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥–∞
    hideMainButton();
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∏–≥—Ä—ã
    initGame();
});
profile-section');
            updateProfileStats();
            
            // –ó–≤—É–∫–∏ –∏ –≤–∏–±—Ä–∞—Ü–∏—è
            if (typeof playSound === 'function') {
                playSound('click');
            }
            
            if (typeof vibrate === 'function') {
                vibrate(30);
            }
        });
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º CSS –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π
    const style = document.createElement('style');
    style.textContent = `
        .completed-task {
            background-color: rgba(76, 175, 80, 0.1) !important;
            border-left: 3px solid #4CAF50 !important;
        }
        
        .dark-theme .completed-task {
            background-color: rgba(76, 175, 80, 0.2) !important;
        }
    `;
    document.head.appendChild(style);
    
    console.log("–ü—Ä–æ—Ñ–∏–ª—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ –ø—Ä–æ—Ñ–∏–ª–µ
function updateProfileStats() {
    // –≠–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å
    const statsToUpdate = {
        'profile-level': gameState.level || 1,
        'total-bananas': gameState.totalBananas || 0,
        'completed-tasks': gameState.completedTasks || 0,
        'opened-boxes': gameState.openedBoxes || 0,
        'invited-friends': gameState.invitedFriends || 0,
        'active-days': gameState.activeDays || 1
    };
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç
    Object.entries(statsToUpdate).forEach(([id, value]) => {
        const element = document.getElementById(id);
        if (element) {
            element.textContent = typeof value === 'number' ? value.toLocaleString() : value;
        }
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
    updateAchievements();
}

// –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
function updateAchievements() {
    const achievementsList = document.getElementById('achievements-list');
    if (!achievementsList) return;
    
    // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫
    achievementsList.innerHTML = '';
    
    // –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    if (!gameState.achievements || gameState.achievements.length === 0) {
        const emptyMessage = document.createElement('div');
        emptyMessage.className = 'achievement-empty';
        emptyMessage.textContent = '–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π. –ò–≥—Ä–∞–π—Ç–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏—Ö!';
        achievementsList.appendChild(emptyMessage);
        return;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫
    gameState.achievements.forEach(achievement => {
        const item = document.createElement('div');
        item.className = 'achievement-item';
        
        const icon = document.createElement('span');
        icon.className = 'achievement-icon';
        icon.textContent = 'üèÜ';
        
        const text = document.createElement('span');
        text.className = 'achievement-text';
        text.textContent = achievement;
        
        item.appendChild(icon);
        item.appendChild(text);
        achievementsList.appendChild(item);
    });
}

// ========== –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –¢–ê–ë–õ–ò–¶–´ –õ–ò–î–ï–†–û–í ==========

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤ –±–µ–∑ —Å–µ—Ä–≤–µ—Ä–∞
function initLeaderboard() {
    console.log("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤");
    
    // –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞
    window.leaderboardData = {
        global: [],
        friends: [],
        lastUpdate: null
    };
    
    // –ù–∞—Ö–æ–¥–∏–º –±–ª–æ–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤
    const leaderboardTabContent = document.getElementById('leaderboard-tab-content');
    if (!leaderboardTabContent) {
        console.error("–ù–µ –Ω–∞–π–¥–µ–Ω –±–ª–æ–∫ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤");
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    const leaderboardList = leaderboardTabContent.querySelector('.leaderboard-list');
    const refreshButton = leaderboardTabContent.querySelector('#refresh-leaderboard');
    
    if (!leaderboardList) {
        console.error("–ù–µ –Ω–∞–π–¥–µ–Ω —Å–ø–∏—Å–æ–∫ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤");
        return;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    if (refreshButton) {
        refreshButton.addEventListener('click', function() {
            console.log("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤");
            fetchLeaderboardData(true);
            
            // –ó–≤—É–∫–∏ –∏ –≤–∏–±—Ä–∞—Ü–∏—è
            if (typeof playSound === 'function') {
                playSound('click');
            }
            
            if (typeof vibrate === 'function') {
                vibrate([30, 50, 30]);
            }
        });
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
    const filterButtons = leaderboardTabContent.querySelectorAll('.leaderboard-filter-btn');
    filterButtons.forEach(button => {
        button.addEventListener('click', function() {
            const filter = this.getAttribute('data-filter');
            
            // –û—Ç–º–µ—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä
            filterButtons.forEach(btn => btn.classList.remove('active'));
            this.classList.add('active');
            
            // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
            renderLeaderboard(filter);
            
            // –ó–≤—É–∫–∏ –∏ –≤–∏–±—Ä–∞—Ü–∏—è
            if (typeof playSound === 'function') {
                playSound('click');
            }
            
            if (typeof vibrate === 'function') {
                vibrate(30);
            }
        });
    });
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∞–±—ã
    initLeaderboardTabs();
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–µ–π—Ç–∏–Ω–≥–∞
    fetchLeaderboardData();
    
    console.log("–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞");
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∞–±–æ–≤ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ –¥—Ä—É–∑–µ–π/–ª–∏–¥–µ—Ä–æ–≤
function initLeaderboardTabs() {
    const tabs = document.querySelectorAll('.friends-tab');
    const contents = document.querySelectorAll('.friends-content');
    
    tabs.forEach(tab => {
        tab.addEventListener('click', function() {
            const tabName = this.getAttribute('data-tab');
            
            // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –≤–∫–ª–∞–¥–∫–∏ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç—ã
            tabs.forEach(t => t.classList.remove('active'));
            contents.forEach(c => c.classList.remove('active'));
            
            // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –≤–∫–ª–∞–¥–∫—É –∏ –∫–æ–Ω—Ç–µ–Ω—Ç
            this.classList.add('active');
            const content = document.getElementById(`${tabName}-tab-content`);
            if (content) {
                content.classList.add('active');
            }
            
            // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ –≤–∫–ª–∞–¥–∫–∞ —Å –ª–∏–¥–µ—Ä–∞–º–∏, –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
            if (tabName === 'leaderboard') {
                if (!window.leaderboardData || !window.leaderboardData.lastUpdate || 
                    Date.now() - window.leaderboardData.lastUpdate > 5 * 60 * 1000) {
                    fetchLeaderboardData();
                }
            }
            
            // –ó–≤—É–∫–∏ –∏ –≤–∏–±—Ä–∞—Ü–∏—è
            if (typeof playSound === 'function') {
                playSound('click');
            }
            
            if (typeof vibrate === 'function') {
                vibrate(30);
            }
        });
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Ä–µ–π—Ç–∏–Ω–≥–∞
function fetchLeaderboardData(forceUpdate = false) {
    console.log("–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–µ–π—Ç–∏–Ω–≥–∞");
    
    // –≠–ª–µ–º–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞
    const leaderboardList = document.querySelector('.leaderboard-list');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    if (leaderboardList) {
        leaderboardList.innerHTML = '<div class="leaderboard-loading">–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞...</div>';
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ–±–Ω–æ–≤–ª—è–ª–∏ –ª–∏ –º—ã –¥–∞–Ω–Ω—ã–µ –Ω–µ–¥–∞–≤–Ω–æ
    if (!forceUpdate && window.leaderboardData && window.leaderboardData.lastUpdate && 
        Date.now() - window.leaderboardData.lastUpdate < 5 * 60 * 1000) {
        console.log("–ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ä–µ–π—Ç–∏–Ω–≥–∞");
        renderLeaderboard(document.querySelector('.leaderboard-filter-btn.active')?.getAttribute('data-filter') || 'global');
        return;
    }
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    generateLocalLeaderboardData().then(data => {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
        window.leaderboardData = {
            ...data,
            lastUpdate: Date.now()
        };
        
        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        renderLeaderboard(document.querySelector('.leaderboard-filter-btn.active')?.getAttribute('data-filter') || 'global');
    });
}

// –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Ä–µ–π—Ç–∏–Ω–≥–∞
async function generateLocalLeaderboardData() {
    // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    let currentUserId = 12345;
    let currentUserName = "–ò–≥—Ä–æ–∫";
    
    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ Telegram –∏–ª–∏ TagManager
    if (window.Telegram && window.Telegram.WebApp && 
        window.Telegram.WebApp.initDataUnsafe && 
        window.Telegram.WebApp.initDataUnsafe.user) {
        
        const user = window.Telegram.WebApp.initDataUnsafe.user;
        currentUserId = user.id || 12345;
        currentUserName = user.first_name || "–ò–≥—Ä–æ–∫";
    } else if (window.TagManager && window.TagManager.getUserData) {
        const userData = window.TagManager.getUserData();
        if (userData) {
            currentUserId = userData.id || 12345;
            currentUserName = userData.first_name || userData.username || "–ò–≥—Ä–æ–∫";
        }
    }
    
    // –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ª–∏–¥–µ—Ä–æ–≤
    const globalLeaderboard = [];
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    globalLeaderboard.push({
        id: currentUserId,
        username: currentUserName,
        level: gameState.level || 1,
        score: gameState.totalBananas || 0,
        isMe: true
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –±–æ—Ç–æ–≤ —Å —Å–ª—É—á–∞–π–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏ –∏ —Å—á–µ—Ç–æ–º
    const botNames = ["MinionsKing", "BananaHunter", "MinionMaster", "BananaCollector", 
                       "YellowMinion", "StarCollector", "BoxOpener", "MinionFan", 
                       "BananaBoss", "StarHunter", "MinionLover", "BoxMaster"];
    
    for (let i = 0; i < 20; i++) {
        const randomIndex = Math.floor(Math.random() * botNames.length);
        const name = botNames[randomIndex] + Math.floor(Math.random() * 100);
        
        globalLeaderboard.push({
            id: 1000 + i,
            username: name,
            level: Math.floor(Math.random() * 20) + 1,
            score: Math.floor(Math.random() * 10000) + 100,
            isMe: false
        });
    }
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –æ—á–∫–∞–º (—É–±—ã–≤–∞–Ω–∏–µ)
    globalLeaderboard.sort((a, b) => b.score - a.score);
    
    // –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥—Ä—É–∑–µ–π (–≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ, –ø—Ä–æ—Å—Ç–æ —á–∞—Å—Ç—å –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞)
    const friendsLeaderboard = [
        // –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        globalLeaderboard.find(player => player.isMe)
    ];
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ "–¥—Ä—É–∑–µ–π"
    for (let i = 0; i < 5; i++) {
        // –ë–µ—Ä–µ–º —Å–ª—É—á–∞–π–Ω–æ–≥–æ –±–æ—Ç–∞ –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
        const randomIndex = Math.floor(Math.random() * globalLeaderboard.length);
        const friend = globalLeaderboard[randomIndex];
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–µ –º—ã –∏ –Ω–µ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π –¥—Ä—É–≥
        if (!friend.isMe && !friendsLeaderboard.some(f => f.id === friend.id)) {
            friendsLeaderboard.push(friend);
        }
    }
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –¥—Ä—É–∑–µ–π –ø–æ –æ—á–∫–∞–º
    friendsLeaderboard.sort((a, b) => b.score - a.score);
    
    return {
        global: globalLeaderboard,
        friends: friendsLeaderboard
    };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤
function renderLeaderboard(filter = 'global') {
    console.log(`–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤: ${filter}`);
    
    // –≠–ª–µ–º–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞
    const leaderboardList = document.querySelector('.leaderboard-list');
    if (!leaderboardList) return;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö
    if (!window.leaderboardData || !window.leaderboardData[filter]) {
        leaderboardList.innerHTML = '<div class="leaderboard-loading">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö —Ä–µ–π—Ç–∏–Ω–≥–∞</div>';
        return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞
    const data = window.leaderboardData[filter];
    
    // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    if (!data || data.length === 0) {
        leaderboardList.innerHTML = '<div class="leaderboard-loading">–†–µ–π—Ç–∏–Ω–≥ –ø—É—Å—Ç</div>';
        return;
    }
    
    // –°–æ–∑–¥–∞–µ–º HTML –¥–ª—è —Å–ø–∏—Å–∫–∞
    let html = '';
    
    data.forEach((player, index) => {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è —Ä–∞–Ω–≥–∞ (—Ç–æ–ø-3 –ø–æ–ª—É—á–∞—é—Ç –æ—Å–æ–±—ã–π —Ü–≤–µ—Ç)
        const rankClass = index < 3 ? `rank-${index + 1}` : '';
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞–≤–∞—Ç–∞—Ä –Ω–∞ –æ—Å–Ω–æ–≤–µ ID –∏–≥—Ä–æ–∫–∞
        const avatarUrl = `https://i.pravatar.cc/150?img=${(player.id % 70) || 1}`;
        
        html += `
            <div class="leaderboard-item ${player.isMe ? 'leaderboard-me' : ''}">
                <div class="leaderboard-rank ${rankClass}">${index + 1}</div>
                <div class="leaderboard-avatar" style="background-image: url('${avatarUrl}')"></div>
                <div class="leaderboard-user-info">
                    <div class="leaderboard-username">${player.username}</div>
                    <div class="leaderboard-level">–£—Ä–æ–≤–µ–Ω—å: ${player.level}</div>
                </div>
                <div class="leaderboard-score">
                    <div class="leaderboard-score-value">${player.score.toLocaleString()}</div>
                    <div class="leaderboard-score-label">–±–∞–Ω–∞–Ω–æ–≤</div>
                </div>
            </div>
        `;
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–ø–∏—Å–∫–∞
    leaderboardList.innerHTML = html;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    const leaderboardInfo = document.querySelector('.leaderboard-info p');
    if (leaderboardInfo && window.leaderboardData.lastUpdate) {
        const date = new Date(window.leaderboardData.lastUpdate);
        leaderboardInfo.textContent = `–û–±–Ω–æ–≤–ª–µ–Ω–æ: ${date.toLocaleTimeString()}`;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ –ª–∏–¥–µ—Ä–æ–≤
function updateLeaderboardUserData() {
    if (!window.leaderboardData) return;
    
    // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º —Ä–µ–π—Ç–∏–Ω–≥–µ
    const globalUser = window.leaderboardData.global.find(player => player.isMe);
    if (globalUser) {
        globalUser.level = gameState.level || 1;
        globalUser.score = gameState.totalBananas || 0;
    }
    
    // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ –¥—Ä—É–∑–µ–π
    const friendsUser = window.leaderboardData.friends.find(player => player.isMe);
    if (friendsUser) {
        friendsUser.level = gameState.level || 1;
        friendsUser.score = gameState.totalBananas || 0;
    }
    
    // –ü–µ—Ä–µ—Å–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–µ–π—Ç–∏–Ω–≥–∏
    if (window.leaderboardData.global) {
        window.leaderboardData.global.sort((a, b) => b.score - a.score);
    }
    
    if (window.leaderboardData.friends) {
        window.leaderboardData.friends.sort((a, b) => b.score - a.score);
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ—Ç–∫—Ä—ã—Ç —Ä–µ–π—Ç–∏–Ω–≥
    const leaderboardTabContent = document.getElementById('leaderboard-tab-content');
    if (leaderboardTabContent && leaderboardTabContent.classList.contains('active')) {
        renderLeaderboard(document.querySelector('.leaderboard-filter-btn.active')?.getAttribute('data-filter') || 'global');
    }
}

// ========== –£–õ–£–ß–®–ï–ù–ò–ï –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –° TELEGRAM ==========

// –£–ª—É—á—à–µ–Ω–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram WebApp
function initTelegramIntegration() {
    console.log("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Telegram");
    
    // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ WebApp
    let tg = null;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Telegram WebApp
    if (window.Telegram && window.Telegram.WebApp) {
        tg = window.Telegram.WebApp;
        
        // –°–æ–æ–±—â–∞–µ–º Telegram, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ
        tg.ready();
        
        // –†–∞—Å—à–∏—Ä—è–µ–º –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
        tg.expand();
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–º—É –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç–µ–º–æ–π Telegram
        const theme = tg.colorScheme || 'light';
        document.documentElement.classList.toggle('dark-theme', theme === 'dark');
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const user = tg.initDataUnsafe?.user;
        if (user) {
            console.log("–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram:", user.first_name);
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∏–≥—Ä–µ
            if (!gameState.userId) {
                gameState.userId = user.id;
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø—Ä–æ—Ñ–∏–ª–µ
            const userNameElement = document.getElementById('user-name');
            if (userNameElement && user.first_name) {
                userNameElement.textContent = user.first_name;
            }
        }
        
        // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è —Å–º–µ–Ω—ã —Ç–µ–º—ã
        tg.onEvent('themeChanged', () => {
            const newTheme = tg.colorScheme;
            document.documentElement.classList.toggle('dark-theme', newTheme === 'dark');
            console.log("–¢–µ–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞:", newTheme);
        });
        
        // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏–µ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        tg.onEvent('viewportChanged', () => {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–∏
            if (!tg.isExpanded) {
                saveGameState();
            }
        });
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ WebApp –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö
        window.tg = tg;
        
        console.log("–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram WebApp —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞");
    } else {
        console.warn("Telegram WebApp –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏");
        initDebugMode();
    }
}

// –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤–Ω–µ Telegram
function initDebugMode() {
    console.log("–í–∫–ª—é—á–µ–Ω —Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏ (–≤–Ω–µ Telegram)");
    
    // –°–æ–∑–¥–∞–µ–º –∏–º–∏—Ç–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const debugUser = {
        id: 12345678,
        first_name: "–¢–µ—Å—Ç–æ–≤—ã–π",
        last_name: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
        username: "test_user"
    };
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∏–≥—Ä–µ
    if (!gameState.userId) {
        gameState.userId = debugUser.id;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø—Ä–æ—Ñ–∏–ª–µ
    const userNameElement = document.getElementById('user-name');
    if (userNameElement) {
        userNameElement.textContent = debugUser.first_name;
    }
    
    // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const themeButton = document.createElement('button');
    themeButton.textContent = '–°–º–µ–Ω–∏—Ç—å —Ç–µ–º—É';
    themeButton.style.position = 'fixed';
    themeButton.style.bottom = '120px';
    themeButton.style.right = '20px';
    themeButton.style.zIndex = 1000;
    themeButton.style.padding = '10px';
    themeButton.style.backgroundColor = '#007bff';
    themeButton.style.color = 'white';
    themeButton.style.border = 'none';
    themeButton.style.borderRadius = '5px';
    themeButton.style.cursor = 'pointer';
    
    themeButton.addEventListener('click', () => {
        document.documentElement.classList.toggle('dark-theme');
    });
    
    document.body.appendChild(themeButton);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –¥—Ä—É–∑–µ–π —á–µ—Ä–µ–∑ Telegram
function inviteFriend() {
    console.log("–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥—Ä—É–≥–∞");
    
    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
    const inviteText = "üçå –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫–æ –º–Ω–µ –≤ –∏–≥—Ä–µ Minions! –°–æ–±–∏—Ä–∞–π –±–∞–Ω–∞–Ω—ã, –æ—Ç–∫—Ä—ã–≤–∞–π –±–æ–∫—Å—ã –∏ —Ä–∞–∑–≤–∏–≤–∞–π —Å–≤–æ—é —Ñ–µ—Ä–º—É –º–∏–Ω—å–æ–Ω–æ–≤!";
    
    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
    const userId = gameState.userId || 'anonymous';
    const refLink = `https://t.me/minions_game_bot?start=ref_${userId}`;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Telegram WebApp
    if (window.tg) {
        try {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º API Telegram –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
            if (window.tg.showPopup) {
                window.tg.showPopup({
                    title: '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞',
                    message: '–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —ç—Ç–æ–π —Å—Å—ã–ª–∫–æ–π —Å –¥—Ä—É–∑—å—è–º–∏:',
                    buttons: [
                        { type: 'close' }
                    ]
                });
            }
            
            // –ö–æ–ø–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
            if (window.tg.clipboard) {
                window.tg.clipboard.setText(`${inviteText} ${refLink}`);
                showPopup('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞');
            } else if (navigator.clipboard) {
                navigator.clipboard.writeText(`${inviteText} ${refLink}`)
                    .then(() => showPopup('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞'))
                    .catch(err => console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:', err));
            }
            
            // –ï—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é shareUrl
            if (typeof window.tg.shareUrl === 'function') {
                window.tg.shareUrl(`${refLink}`);
            }
            
            // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π
            gameState.invitedFriends = (gameState.invitedFriends || 0) + 1;
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–¥–∞–Ω–∏—è
            if (gameState.invitedFriends >= 10 && gameState.taskProgress.task1 < 1) {
                gameState.taskProgress.task1 = 1;
                setTimeout(() => {
                    completeTask(1);
                }, 1000);
            } else {
                // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–¥–∞–Ω–∏—è
                updateTaskProgress();
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
            updateStats();
            saveGameState();
            
            return true;
        } catch (e) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–∏ –¥—Ä—É–≥–∞ —á–µ—Ä–µ–∑ Telegram:', e);
        }
    }
    
    // –ó–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç, –µ—Å–ª–∏ Telegram –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ —Å–æ —Å—Å—ã–ª–∫–æ–π
    const message = `–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –¥—Ä—É–∑—å—è–º:\n\n${inviteText}\n\n${refLink}`;
    alert(message);
    
    // –ü—ã—Ç–∞–µ–º—Å—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
    try {
        navigator.clipboard.writeText(`${inviteText}\n\n${refLink}`)
            .then(() => showPopup('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞'))
            .catch(err => console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:', err));
    
        // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π
        gameState.invitedFriends = (gameState.invitedFriends || 0) + 1;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–¥–∞–Ω–∏—è
        updateTaskProgress();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
        updateStats();
        saveGameState();
        
        return true;
    } catch (e) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å—Å—ã–ª–∫–∏:', e);
        return false;
    }
}

// ========== –û–ë–©–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ò –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø ==========

// –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–π –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
function initGame() {
    console.log("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã");
    
    // –°–∫—Ä—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏
    const splashScreen = document.getElementById('splash-screen');
    if (splashScreen) {
        // –î–µ–ª–∞–µ–º –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        showLoadingProgress(0);
    }
    
    try {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Telegram
        initTelegramIntegration();
        showLoadingProgress(10);
        
        // –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        if (typeof loadSettings === 'function') {
            loadSettings();
        }
        showLoadingProgress(20);
        
        // –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∏–≥—Ä—ã
        loadGameState();
        showLoadingProgress(30);
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        initSaveSystem();
        showLoadingProgress(40);
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        if (typeof initializeUI === 'function') {
            initializeUI();
        }
        showLoadingProgress(50);
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ñ–∏–ª—è
        initProfile();
        showLoadingProgress(60);
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–¥–∞–Ω–∏–π
        initTasks();
        showLoadingProgress(70);
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ–∫—Å–æ–≤
        initBoxHandlers();
        showLoadingProgress(80);
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤
        initLeaderboard();
        showLoadingProgress(90);
        
        // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        finalizeInitialization();
        showLoadingProgress(100);
        
        console.log("–ò–≥—Ä–∞ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞");
        
        // –°–∫—Ä—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É
        setTimeout(() => {
            if (splashScreen) {
                splashScreen.style.opacity = '0';
                setTimeout(() => {
                    splashScreen.style.display = 'none';
                    
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
                    showSection('
